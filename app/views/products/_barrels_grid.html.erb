<%= define_grid(@barrels_grid, hide_submit_button: true, hide_reset_button: true, upper_pagination_panel: true , html: {class: 'table table-striped table-hover table-condensed table-responsive'}) do |g|
  g.blank_slate content_tag(:div, "No products found", class: 'well')


  g.column name:  'Product', attribute: 'title', detach_with_id: :title_filter do |x|
    link_to(x.title.titleize, x) + (br() + link_to(image_tag(x.photos.first.image.thumb), x) unless x.photos.first.nil?) + br() +
    'Price: ' + (x.sale ? "<s>#{(number_to_currency x.price).to_s}</s><div class='text-danger'>Sale: #{(number_to_currency x.sale_price).to_s}</div>".html_safe : (number_to_currency x.price).to_s)
  end

    g.column name:  'Manufacturer', attribute: 'manufacturer', detach_with_id: :manufacturer_filter, custom_filter: Product.where(:store => "barrels").select("DISTINCT(manufacturer)").map {|p| [p.manufacturer.titleize, p.manufacturer]}.sort do |x|
  x.manufacturer.titleize
  end


  g.column name:  'Model', attribute: 'model', detach_with_id: :model_filter, custom_filter: Product.where(:store => "barrels").select("DISTINCT(model)").map {|p| [p.model.titleize, p.model]}.sort do |x|
  x.model.titleize
  end

g.column name:  'Barrel Length', attribute: 'barrel_length', detach_with_id: :barrel_length_filter,
custom_filter: Product.where(:store => "barrels").select("DISTINCT(barrel_length)").order("barrel_length").map {|p| [((p.barrel_length.to_s + " in.") unless (p.barrel_length.nil? || p.barrel_length.empty?)), p.barrel_length]} do |x|
  (x.barrel_length.to_s + " in." ) unless (x.barrel_length.nil? || x.barrel_length.empty?)
  end

  g.column name:  'Caliber/Gauge', attribute: 'caliber', detach_with_id: :caliber_filter, custom_filter: Product.where(:store => "barrels").select("DISTINCT(caliber)").map {|p| [p.caliber, p.caliber]}.sort do |x|
  x.caliber
  end



end -%>
